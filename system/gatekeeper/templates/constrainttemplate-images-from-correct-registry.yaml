apiVersion: templates.gatekeeper.sh/v1
kind: ConstraintTemplate
metadata:
  name: gkimagesfromcorrectregistry
spec:
  crd:
    spec:
      names:
        kind: GkImagesFromCorrectRegistry
      validation:
        # Schema for the `parameters` field
        openAPIV3Schema:
          type: object
          properties:
            registry:
              type: string
            registryAlternateRegion:
              type: string

  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package imagesfromcorrectregistry

        extract_keppel_region(image) = region {
          matchList := regex.find_all_string_submatch_n(`^keppel\.([-\w]+)\.[a-zA-Z]+\.[a-zA-Z]+/`, image, 1)
          count(matchList) > 0
          region = matchList[0][1]
        }

        extract_image_name_with_tag(image) = image_tag {
          not contains(image, "/")
          image_tag = image
        }
        extract_image_name_with_tag(image) = image_tag {
          contains(image, "/")
          sL := split(image, "/")
          count(sL) > 0
          image_tag = sL[minus(count(sL), 1)]
        }

        iro := input.review.object
        iro_support_group := object.get(iro, ["metadata", "labels", "cc/support-group"], "none")
        iro_service := object.get(iro, ["metadata", "labels", "cc/service"], "none")

        correct_regions[region] {
          region = extract_keppel_region(input.parameters.registry)
        }

        correct_regions[alternate_region] {
          alternate_region = extract_keppel_region(input.parameters.registryAlternateRegion)
        }

        violation[{"msg": msg}] {
          iro.kind == "Pod"
          container := iro.spec.containers[_]
          image := container.image

          current_region = extract_keppel_region(image) # this will also check if image is using Keppel or not
          current_region != "global" # global registry is also an acceptable source
          found := {r | current_region == correct_regions[r]}
          count(found) == 0

          image_name := extract_image_name_with_tag(image)
          msg := sprintf(
            "support-group=%s,service=%s: container %q uses incorrect regional registry for image: %s",
            [iro_support_group, iro_service, container.name, image_name]
          )
        }
